version: "3"
services:
  agency:
    image: vcr-agent
    environment:
      - ACAPY_LABEL=${AGENCY_NAME}
      - ACAPY_ENDPOINT=${AGENCY_ENDPOINT}
      - ACAPY_GENESIS_URL=${LEDGER_URL}/genesis
      - ACAPY_WALLET_NAME=${AGENCY_WALLET_NAME}
      - ACAPY_WALLET_TYPE=askar
      - ACAPY_WALLET_KEY=${AGENCY_WALLET_ENCRYPTION_KEY}
      - ACAPY_WALLET_SEED=${AGENCY_WALLET_SEED}
      - ACAPY_WALLET_STORAGE_TYPE=${AGENCY_WALLET_STORAGE_TYPE}
      - ACAPY_WEBHOOK_URL=${AGENCY_WEBHOOK_URL}
      - ACAPY_LOG_LEVEL=${AGENCY_LOG_LEVEL}
      - ACAPY_AUTO_PROVISION=true
      - ACAPY_AUTO_ACCEPT_INVITES=true
      - ACAPY_AUTO_ACCEPT_REQUESTS=true
      - ACAPY_AUTO_PING_CONNECTION=true
      - ACAPY_AUTO_RESPOND_MESSAGES=true
      - ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER=true
      - ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST=true
      - ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST=true
      - ACAPY_AUTO_VERIFY_PRESENTATION=true
      - ACAPY_MULTITENANT=true
      - ACAPY_MULTITENANT_ADMIN=true
      - ACAPY_MULTITENANT_JWT_SECRET=${AGENCY_JWT_SECRET}
      - AGENCY_HTTP_IN_PORT=${AGENCY_HTTP_IN_PORT}
      - AGENCY_WS_IN_PORT=${AGENCY_WS_IN_PORT}
      - AGENCY_ADMIN_PORT=${AGENCY_ADMIN_PORT}
      - POSTGRESQL_WALLET_HOST=${POSTGRESQL_WALLET_HOST}
      - POSTGRESQL_WALLET_PORT=${POSTGRESQL_WALLET_PORT}
      - POSTGRESQL_WALLET_USER=${POSTGRESQL_USER}
      - POSTGRESQL_WALLET_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_WALLET_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - vcr-issuer-agency
      - vcr
    ports:
      - ${AGENCY_HTTP_IN_PORT}:${AGENCY_HTTP_IN_PORT}
      - ${AGENCY_WS_IN_PORT}:${AGENCY_WS_IN_PORT}
      - ${AGENCY_ADMIN_PORT}:${AGENCY_ADMIN_PORT}
    depends_on:
      - wallet
    entrypoint: /bin/bash
    command: [
        "-c",
        "curl -d '{\"seed\":\"${AGENCY_WALLET_SEED}\", \"role\":\"\", \"alias\":\"${AGENCY_WALLET_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        sleep 5; \
        aca-py start \
        --inbound-transport http '0.0.0.0' ${AGENCY_HTTP_IN_PORT} \
        --inbound-transport ws '0.0.0.0' ${AGENCY_WS_IN_PORT} \
        --outbound-transport ws \
        --outbound-transport http \
        --wallet-storage-config '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRESQL_USER}\",\"password\":\"${POSTGRESQL_PASSWORD}\",\"admin_account\":\"postgres\",\"admin_password\":\"${POSTGRESQL_ADMIN_PASSWORD}\"}' \
        --admin '0.0.0.0' ${AGENCY_ADMIN_PORT} \
        --${AGENCY_ADMIN_MODE} \
        --plugin indy_catalyst_issuer_registration;",
      ]

  endorser:
    image: bcgovimages/aries-cloudagent:py36-1.16-1_1.0.0-rc1
    environment:
      - ACAPY_LABEL=${ENDORSER_NAME}
      - ACAPY_ENDPOINT=${ENDORSER_ENDPOINT}
      - ACAPY_GENESIS_URL=${LEDGER_URL}/genesis
      - ACAPY_WALLET_NAME=${ENDORSER_WALLET_NAME}
      - ACAPY_WALLET_TYPE=askar
      - ACAPY_WALLET_KEY=${ENDORSER_WALLET_ENCRYPTION_KEY}
      - ACAPY_WALLET_SEED=${ENDORSER_WALLET_SEED}
      - ACAPY_WALLET_STORAGE_TYPE=${ENDORSER_WALLET_STORAGE_TYPE}
      - ACAPY_WEBHOOK_URL=${ENDORSER_WEBHOOK_URL}
      - ACAPY_LOG_LEVEL=${ENDORSER_LOG_LEVEL}
      - ACAPY_AUTO_PROVISION=true
      - ACAPY_AUTO_ACCEPT_INVITES=true
      - ACAPY_AUTO_ACCEPT_REQUESTS=true
      - ACAPY_AUTO_PING_CONNECTION=true
      - ACAPY_AUTO_RESPOND_MESSAGES=true
      - ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER=true
      - ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST=true
      - ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST=true
      - ACAPY_AUTO_VERIFY_PRESENTATION=true
      - ACAPY_PUBLIC_INVITES=true
      - ENDORSER_HTTP_IN_PORT=${ENDORSER_HTTP_IN_PORT}
      - ENDORSER_WS_IN_PORT=${ENDORSER_WS_IN_PORT}
      - ENDORSER_ADMIN_PORT=${ENDORSER_ADMIN_PORT}
      - POSTGRESQL_WALLET_HOST=${POSTGRESQL_WALLET_HOST}
      - POSTGRESQL_WALLET_PORT=${POSTGRESQL_WALLET_PORT}
      - POSTGRESQL_WALLET_USER=${POSTGRESQL_USER}
      - POSTGRESQL_WALLET_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_WALLET_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - vcr-issuer-agency
    ports:
      - ${ENDORSER_HTTP_IN_PORT}:${ENDORSER_HTTP_IN_PORT}
      - ${ENDORSER_WS_IN_PORT}:${ENDORSER_WS_IN_PORT}
      - ${ENDORSER_ADMIN_PORT}:${ENDORSER_ADMIN_PORT}
    depends_on:
      - wallet
    entrypoint: /bin/bash
    command: [
        "-c",
        "curl -d '{\"seed\":\"${ENDORSER_WALLET_SEED}\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"${ENDORSER_WALLET_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        sleep 5; \
        aca-py start \
        --inbound-transport http '0.0.0.0' ${ENDORSER_HTTP_IN_PORT} \
        --inbound-transport ws '0.0.0.0' ${ENDORSER_WS_IN_PORT} \
        --outbound-transport ws \
        --outbound-transport http \
        --wallet-storage-config '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRESQL_USER}\",\"password\":\"${POSTGRESQL_PASSWORD}\",\"admin_account\":\"postgres\",\"admin_password\":\"${POSTGRESQL_ADMIN_PASSWORD}\"}' \
        --admin '0.0.0.0' ${ENDORSER_ADMIN_PORT} \
        --${ENDORSER_ADMIN_MODE};",
      ]

  wallet:
    image: vcr-wallet-db
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DB=${POSTGRESQL_DATABASE}
      - POSTGRES_ADMIN_USER=postgres
      - POSTGRES_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - vcr-issuer-agency
    ports:
      - 5436:5432
    volumes:
      - agency-wallet:/var/lib/pgsql/data

  agency-controller-dev:
    image: node:fermium
    environment:
      - PORT=${AGENCY_CONTROLLER_PORT}
      - CONTROLLER_ADMIN_API_KEY=${AGENCY_CONTROLLER_ADMIN_API_KEY}
      - AGENCY_ADMIN_URL=${AGENCY_ADMIN_URL}
      - AGENCY_ADMIN_API_KEY=${AGENCY_ADMIN_API_KEY}
      - AGENCY_WEBHOOK_URL=${AGENCY_WEBHOOK_URL}
      - DB_SERVICE=${DB_SERVICE}
      - DB_NAME=${MONGODB_DATABASE}
      - DB_USER=${MONGODB_USER}
      - DB_PASSWORD=${MONGODB_PASSWORD}
      - DB_PORT=${MONGODB_PORT}
      - REGISTRY_ADMIN_URL=${REGISTRY_ADMIN_URL}
      - REGISTRY_ADMIN_API_KEY=${REGISTRY_ADMIN_API_KEY}
      - REGISTRY_ALIAS=${REGISTRY_ALIAS}
      - ENDORSER_ADMIN_URL=${ENDORSER_ADMIN_URL}
      - ENDORSER_ADMIN_API_KEY=${ENDORSER_ADMIN_API_KEY}
      - ENDORSER_ALIAS=${ENDORSER_ALIAS}
      - LOG_LEVEL=${LOG_LEVEL}
      - CRED_EX_TIMEOUT=${CRED_EX_TIMEOUT}
      - TRANSACTION_TIMEOUT=${TRANSACTION_TIMEOUT}
    volumes:
      - ../agency:/usr/src/controller
      - agency-controller-data:/usr/src/controller/node_modules
    ports:
      - ${AGENCY_CONTROLLER_PORT}:${AGENCY_CONTROLLER_PORT}
    networks:
      - vcr-issuer-agency
      - vcr
    working_dir: /usr/src/controller
    depends_on:
      - agency
      - db
      - endorser
    entrypoint: /bin/bash
    command: ["-c", "npm install; npm run dev"]

  endorser-controller-dev:
    image: node:fermium
    environment:
      - PORT=${ENDORSER_CONTROLLER_PORT}
      - CONTROLLER_ADMIN_API_KEY=${ENDORSER_CONTROLLER_ADMIN_API_KEY}
      - ENDORSER_ADMIN_URL=${ENDORSER_ADMIN_URL}
      - ENDORSER_ADMIN_API_KEY=${ENDORSER_ADMIN_API_KEY}
      - ENDORSER_WEBHOOK_URL=${ENDORSER_WEBHOOK_URL}
      - ENDORSER_ALIAS=${ENDORSER_ALIAS}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ../endorser:/usr/src/controller
      - endorser-controller-data:/usr/src/controller/node_modules
    ports:
      - ${ENDORSER_CONTROLLER_PORT}:${ENDORSER_CONTROLLER_PORT}
    networks:
      - vcr-issuer-agency
    working_dir: /usr/src/controller
    depends_on:
      - endorser
    entrypoint: /bin/bash
    command: ["-c", "npm install; npm run dev"]

  agency-client:
    image: agency-client
    environment:
      WEB_HOST_NAME: ${PUBLIC_WEB_HOST_NAME}
      WEB_HOST_PORT: ${PUBLIC_WEB_HOST_PORT}
      WEB_HOST_TLS: ${PUBLIC_WEB_HOST_TLS}
      API_HOST: ${PUBLIC_API_HOST}
      API_PORT: ${PUBLIC_API_PORT}
    volumes:
      - ./agency-client/config/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - ${PUBLIC_WEB_HOST_PORT}:${PUBLIC_WEB_HOST_PORT}
    networks:
      - vcr-issuer-agency
    depends_on:
      - agency-controller-dev

  db:
    image: centos/mongodb-36-centos7
    environment:
      - MONGODB_ADMIN_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
    volumes:
      - db-data:/var/lib/mongodb/data
    ports:
      - 27117:${MONGODB_PORT}
    networks:
      - vcr-issuer-agency

networks:
  vcr-issuer-agency:
  vcr:
    name: vcr_vcr

volumes:
  agency-wallet:
  db-data:
  agency-controller-data:
  endorser-controller-data:
  agency-client-data:
